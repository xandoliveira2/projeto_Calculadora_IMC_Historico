name: Validate Pull Request Source Branch and Run Tests

on:
  pull_request:
    branches:
      - main  # Dispara o workflow quando há um pull request para a branch 'main'

jobs:
  check-pr-branch:
    runs-on: ubuntu-latest  # Ambiente de execução do Ubuntu

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2  # Faz o checkout do código para a máquina de CI

      - name: Check PR source branch
        run: |
          if [[ "${{ github.head_ref }}" != "dev" ]]; then
            echo "ERRO: Apenas pull requests da branch 'dev' são permitidas para a branch 'main'."
            exit 1  # Encerra o processo caso a branch não seja 'dev'
          fi

  test:
    runs-on: ubuntu-latest  # Ambiente de execução do Ubuntu

    needs: check-pr-branch  # O job 'test' depende da conclusão bem-sucedida de 'check-pr-branch'

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2  # Faz o checkout do código para o ambiente de execução

      - name: Set up PHP
        uses: shivammathur/setup-php@v2  # Configura o PHP
        with:
          php-version: '8.1'  # Defina a versão do PHP que está usando
          extensions: mbstring, bcmath, curl  # Extensões necessárias para Laravel
          coverage: xdebug  # Ativa o Xdebug para cobertura de testes (opcional)

      - name: Install Dependencies
        run: |
          composer install --no-interaction --prefer-dist  # Instala as dependências do Composer

      - name: Set up .env file for testing
        run: |
          cp .env.example .env  # Copia o arquivo .env.example para .env
          php artisan key:generate  # Gera a chave da aplicação
          php artisan migrate --env=testing --force  # Realiza as migrações para o ambiente de teste

      - name: Run Tests
        run: |
          ./vendor/bin/phpunit --configuration phpunit.xml --testdox  # Executa os testes do PHPUnit
